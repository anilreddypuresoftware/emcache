name: CI

on:
  # Trigger the workflow on push or pull request,
  # but only for the master branch
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:

    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.8"]
      

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Compile murmur3
      run: |
        cd vendor/murmur3
        make static
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        make install-dev
    - name: Lint with flake8
      run: |
        make lint
    - name: Memcached dependencies with Mac, by hand
      if: ${{ matrix.os == 'macos-latest' }}
      run: |
        brew install memcached
        memcached -d -p 11211
        memcached -d -p 11212
        memcached -d -p 11213 --enable-ssl -o ssl_chain_cert=./tests/acceptance/data/localhost.crt,ssl_key=./tests/acceptance/data/localhost.key
    - name: Docker dependencies
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: |
        docker-compose up -d
    - name: Test
      run: |
        make test
    - name: Coverage
      run: |
        make coverage
  armv64_job:
      name: Build and Test for arm64
      runs-on: ubuntu-20.04
      steps:
        - uses: actions/checkout@v2
          with:
            submodules:true
        - name: Set up QEMU
          id: qemu
          uses: docker/setup-qemu-action@v1
        - name: Install and Run tests
          run: |
            docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
              arm64v8/ubuntu:20.04 \
              bash -exc 'apt-get update && apt-get -y install python3 python3-pip python3-venv curl && \
              python3 -m pip install virtualenv && python3 -m venv py38-venv && \
              source py38-venv/bin/activate && \
              cd vendor/murmur3 && \
              make static && \
              python -m pip install --upgrade pip && \
              make install-dev && \
              make lint && \
              make test && \
              deactivate'
